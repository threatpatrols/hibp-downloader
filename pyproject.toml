[build-system]
build-backend = "pdm.backend"
requires = ["pdm-backend"]


# project
# ===
[project]
name = "hibp-downloader"
license = {text = "BSD-3-Clause" }
authors = [{name="Nicholas de Jong", email="ndejong@threatpatrols.com"}]
description = "Efficiently download HIBP new pwned password data by hash-prefix for a local-copy"
version = "0.3.2"
readme = "README.md"
requires-python = ">=3.8,<4"
keywords = ["hibp-downloader", "hibp", "haveibeenpwned", "haveibeenpwned-downloader", "sha1", "ntlm"]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "httpx[http2]>=0.21",   # https://pypi.org/project/httpx/#history
    "httpcore>=0.14",       # https://pypi.org/project/httpcore/#history
    "aiofiles>=0.8",        # https://pypi.org/project/aiofiles/#history
    "typer>=0.9.0",         # https://pypi.org/project/typer/#history
    "shellingham>=1.3.0"    # https://pypi.org/project/shellingham/#history
]

[project.scripts]
hibp-downloader = "hibp_downloader.main:entrypoint"

[project.urls]
Documentation = "https://threatpatrols.github.io/hibp-downloader"
Homepage = "https://github.com/threatpatrols/hibp-downloader"
Repository = "https://github.com/threatpatrols/hibp-downloader"
"Bug Tracker" = "https://github.com/threatpatrols/hibp-downloader/issues"


# slap-cli
# ===
[tool.slap]
typed = true
release.branch = "dev"

[tool.slap.test]
check = "slap check"
mypy = "dmypy run src"
pytest = "pytest tests/ -vv"
ruff-format = "ruff format --check"
ruff-lint = "ruff check"

[tool.slap.run]
format = "ruff format ."
check-prereqs = """set -e; \
    uv --help > /dev/null || (echo 'Failed uv prereq!' && exit 1); \
    pdm --help > /dev/null || (echo 'Failed pdm prereq!' && exit 1); \
    flit --help > /dev/null || (echo 'Failed flit prereq!' && exit 1); \
    echo "Prereqs okay."
"""
docs-dev = """set -e; \
    cd docs \
    && touch uv.lock \
    && uv run --active -- bash -xc 'mkdocs serve'
"""
docs-build = """set -e; \
    cd docs \
    && uv run --active -- bash -xc 'mkdocs build'
"""
package-build = """set -e; \
    slap release --validate \
    && slap test \
    && slap publish --dry --build-directory ./dist
"""


# mypy
# ===
[tool.mypy]
pretty = true
warn_redundant_casts = true
#warn_unused_ignores = true
namespace_packages = true
show_error_codes = true
show_error_context = true
warn_no_return = true
warn_unreachable = true


# uv
# ===
[tool.uv]
dev-dependencies = [
  "ruff",
  "pytest",
  "mypy",
  "types-aiofiles",
]


# ruff
# ===
[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = ["E501"]  # E501 line too long (151 > 120 characters)

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["F401"]  # F401 module imported but unused
"src/hibp_downloader/models/__init__.py" = ["F401"]  # F401 Module imported but unused
"src/**/app.py" = ["W293"]  # W293 blank line contains whitespace
"src/hibp_downloader/lib/md4.py" = ["E203", "E741"]  # E203 whitespace before ':'; E741 ambiguous variable name 'l'


#
#[tool.poetry]
#name = "hibp-downloader"
#version = "0.3.2"
#description = "Efficiently download HIBP new pwned password data by hash-prefix for a local-copy"
#authors = ["Nicholas de Jong <contact@threatpatrols.com>"]
#license = "BSD-3-Clause"
#readme = "README.md"
#packages = [{ include = "hibp_downloader", from = "src" }]
#classifiers = [
#    "Environment :: Console",
#    "Intended Audience :: System Administrators",
#    "License :: OSI Approved :: BSD License",
#    "Programming Language :: Python :: 3.8",
#    "Programming Language :: Python :: 3.9",
#    "Programming Language :: Python :: 3.10",
#    "Programming Language :: Python :: 3.11",
#    "Programming Language :: Python :: 3.12"
#]
#keywords = ["hibp-downloader", "hibp", "haveibeenpwned", "haveibeenpwned-downloader", "sha1", "ntlm"]
#
#[tool.poetry.urls]
#Documentation = "https://threatpatrols.github.io/hibp-downloader"
#Homepage = "https://github.com/threatpatrols/hibp-downloader"
#Repository = "https://github.com/threatpatrols/hibp-downloader"
#"Bug Tracker" = "https://github.com/threatpatrols/hibp-downloader/issues"
#
#[tool.poetry.scripts]
#hibp-downloader = "hibp_downloader.main:entrypoint"
#
#[tool.poetry.dependencies]
#python = "^3.8"
#"httpx[http2]" = ">=0.21"       # https://pypi.org/project/httpx/#history
#httpcore = ">=0.14"             # https://pypi.org/project/httpcore/#history
#aiofiles = ">=0.8"              # https://pypi.org/project/aiofiles/#history
#"typer[all]" = ">=0.9.0"        # https://pypi.org/project/typer/#history
#shellingham = ">=1.3.0"         # https://pypi.org/project/shellingham/#history
#
#[tool.poetry.dev-dependencies]
#black = ">=23.0"                 # https://pypi.org/project/black/#history
#flake8 = ">=7.0"                 # https://pypi.org/project/flake8/#history
#isort = ">=5.13"                 # https://pypi.org/project/isort/#history
#mypy = ">=1.8"                   # https://pypi.org/project/mypy/#history
#pycln = ">=2.4"                  # https://pypi.org/project/pycln/#history
#pytest = ">=7.4"                 # https://pypi.org/project/pytest/#history
#safety = ">=3.0.1"               # https://pypi.org/project/safety/#history
#urllib3 = ">=2.1"                # https://pypi.org/project/urllib3/#history
#types-aiofiles = ">=23.2"        # https://pypi.org/project/types-aiofiles/#history
## NB: pip installs in .readthedocs.yml need to be kept up-to-date manually
#novella = ">=0.2"                # https://pypi.org/project/novella/#history
#pydoc-markdown = ">=4.8"         # https://pypi.org/project/pydoc-markdown/#history
#mkdocs-material = ">=9.5"        # https://pypi.org/project/mkdocs-material/#history
#
#[tool.poetry.plugins."slap.plugins.check"]
#changelog = "slap.ext.checks.changelog:ChangelogValidationCheckPlugin"
#general = "slap.ext.checks.general:GeneralChecksPlugin"
#poetry = "slap.ext.checks.poetry:PoetryChecksPlugin"
#release = "slap.ext.checks.release:ReleaseChecksPlugin"
#
#[tool.slap]
#typed = true
#release.branch = "dev"
#
#[tool.slap.test]
#check = "slap check"
#black = "black --check src/ tests/"
#flake8 = "flake8 src/ tests/"
#isort = "isort --check-only src/ tests/"
#mypy = "dmypy run src/"
#pycln  = "pycln src/ tests/ --check"
#pytest = "pytest tests/ -vv"
#
#[tool.slap.run]
#format = "black src/ tests/ && isort src/ tests/"
#docs-build = "cd docs && novella --base-url hibp-downloader/"
#docs-server = "cd docs && novella --serve"
#
#[tool.mypy]
#explicit_package_bases = true
#ignore_missing_imports = true
#mypy_path = ["src"]
#namespace_packages = true
#pretty = true
#python_version = "3.8"
#show_error_codes = true
#show_error_context = true
#strict = false
#warn_no_return = true
#warn_redundant_casts = true
#warn_unreachable = true
#warn_unused_ignores = true
#
#[tool.isort]
#profile = "black"
#line_length = 120
#combine_as_imports = true
#
#[tool.black]
#line-length = 120
